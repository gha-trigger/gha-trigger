"use strict";(self.webpackChunkgha_trigger=self.webpackChunkgha_trigger||[]).push([[401],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=o.createContext({}),p=function(e){var t=o.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(u.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),k=r,h=d["".concat(u,".").concat(k)]||d[k]||l[k]||i;return n?o.createElement(h,a(a({ref:t},c),{},{components:n})):o.createElement(h,a({ref:t},c))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,a=new Array(i);a[0]=d;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var p=2;p<i;p++)a[p]=n[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},643:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const i={sidebar_position:200},a="CI Repository",s={unversionedId:"config/ci-repository",id:"config/ci-repository",title:"CI Repository",description:"CI Repository's GitHub Actions Workflow",source:"@site/docs/config/ci-repository.md",sourceDirName:"config",slug:"/config/ci-repository",permalink:"/gha-trigger/config/ci-repository",draft:!1,editUrl:"https://github.com/suzuki-shunsuke/gha-trigger-docs/edit/main/docs/config/ci-repository.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{sidebar_position:200},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/gha-trigger/config/"}},u={},p=[{value:"CI Repository&#39;s GitHub Actions Workflow",id:"ci-repositorys-github-actions-workflow",level:2},{value:"Workflow Dispatch&#39;s inputs",id:"workflow-dispatchs-inputs",level:2},{value:"Checkout <code>CI Repository</code> and <code>Main Repository</code>",id:"checkout-ci-repository-and-main-repository",level:2},{value:"Use GitHub App instead of <code>${{ github.token }}</code>",id:"use-github-app-instead-of--githubtoken-",level:2},{value:"Update commit statuses",id:"update-commit-statuses",level:2}],c={toc:p};function l(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ci-repository"},"CI Repository"),(0,r.kt)("h2",{id:"ci-repositorys-github-actions-workflow"},"CI Repository's GitHub Actions Workflow"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Workflow Dispatch's inputs"),(0,r.kt)("li",{parentName:"ul"},"Checkout ",(0,r.kt)("inlineCode",{parentName:"li"},"CI Repository")," and ",(0,r.kt)("inlineCode",{parentName:"li"},"Main Repository")),(0,r.kt)("li",{parentName:"ul"},"Use GitHub App instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"${{ github.token }}")),(0,r.kt)("li",{parentName:"ul"},"Update commit statuses")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"---\nname: Format Rego files\non:\n  workflow_dispatch:\n    inputs:\n      # payload:\n      #   required: true\n      repo:\n        required: true\n      ref:\n        required: true\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - name: Generate token\n        id: generate_token\n        uses: tibdex/github-app-token@v1\n        with:\n          app_id: ${{ secrets.APP_ID }}\n          private_key: ${{ secrets.APP_PRIVATE_KEY }}\n      - uses: actions/checkout@v3\n        with:\n          repository: ${{ github.event.inputs.repo }}\n          ref: ${{ github.event.inputs.ref }}\n          token: ${{ steps.generate_token.outputs.token }}\n      - uses: actions/checkout@v2\n        with:\n          path: .test-isolation\n\n      - uses: ./.test-isolation/.github/actions/aqua\n      - uses: suzuki-shunsuke/github-action-opa-fmt@v0.1.0\n        with:\n          github_token: ${{ steps.generate_token.outputs.token }}\n")),(0,r.kt)("h2",{id:"workflow-dispatchs-inputs"},"Workflow Dispatch's inputs"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"on:\n  workflow_dispatch:\n    inputs:\n      # payload:\n      #   required: true\n      repo:\n        required: true\n      ref:\n        required: true\n")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"repo:"),(0,r.kt)("li",{parentName:"ul"},"payload:")),(0,r.kt)("h2",{id:"checkout-ci-repository-and-main-repository"},"Checkout ",(0,r.kt)("inlineCode",{parentName:"h2"},"CI Repository")," and ",(0,r.kt)("inlineCode",{parentName:"h2"},"Main Repository")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- uses: actions/checkout@v3\n  with:\n    repository: ${{ github.event.inputs.repo }}\n    ref: ${{ github.event.inputs.ref }}\n    token: ${{ steps.generate_token.outputs.token }}\n- uses: actions/checkout@v2\n  with:\n    path: .test-isolation\n")),(0,r.kt)("h2",{id:"use-github-app-instead-of--githubtoken-"},"Use GitHub App instead of ",(0,r.kt)("inlineCode",{parentName:"h2"},"${{ github.token }}")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/tibdex/github-app-token"},"https://github.com/tibdex/github-app-token")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"- name: Generate token\n  id: generate_token\n  uses: tibdex/github-app-token@v1\n  with:\n    app_id: ${{ secrets.APP_ID }}\n    private_key: ${{ secrets.APP_PRIVATE_KEY }}\n- uses: actions/checkout@v3\n  with:\n    repository: ${{ github.event.inputs.repo }}\n    ref: ${{ github.event.inputs.ref }}\n    token: ${{ steps.generate_token.outputs.token }}\n")),(0,r.kt)("h2",{id:"update-commit-statuses"},"Update commit statuses"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/suzuki-shunsuke/update-commit-status-action"},"https://github.com/suzuki-shunsuke/update-commit-status-action")))}l.isMDXComponent=!0}}]);